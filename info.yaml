--- 
# TinyTapeout project information
#
# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it.
#
# This will be automatically collected and used to make a datasheet for the chip.
project: 
  author:       "Leo Moser"      # Your name
  title:        "1-bit ALU"      # Project title
  description:  "1-bit ALU from the book `Structured Computer Organization: Andrew S. Tanenbaum`"      # Short description of what your project does
  how_it_works: "The 1-bit ALU implements 4 different operations: AND, NOT, OR, ADD.
                 
                 The current operating mode can be selected via F0 and F1.
                 F0=0 and F1=0 results in A AND B.
                 F0=1 and F1=0 results in NOT B.
                 F0=0 and F1=1 results in A OR B.
                 F0=1 and F1=1 results in A ADD B.
                 Where A and B are the inputs for the operation.
                 
                 Additional inputs can change the way of operation:
                 
                 `ENA` and `ENB` enable/disable the respective input.
                 `INVA` inverts A before applying the operation.
                 `CIN` is used as input for the full adder.
                 
                 Multiple 1bit ALUs could be chained to create a wider ALU.
                 "      # Longer description of how the project works
  how_to_test:  "Set the operating mode via the DIP switches with F0 and F1.
                 
                 Next, set the input with A and B and enable both signals with ENA=1 and ENB=1.
                 If you choose to invert A, set INVA to 1, otherwise to 0.
                 For F0=1 and F1=1 you can set CIN as additional input for the ADD operation.
                 
                 The 7-segment display shows either a `0` or a `1` depending on the output.
                 If the ADD operation is selected, the dot of the 7-segment display represents the COUT.
                 "      # Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  external_hw:  "None"      # Describe any external hardware needed
  doc_link:     "https://github.com/mole99/wokwi-1bit-alu/blob/main/README.md"      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     0       # Clock frequency in Hz (if required)
  language:     "wokwi" # other examples include Verilog, Amaranth, VHDL, etc
  wokwi_id:     340318610245288530       # the wokwi ID
  picture:      "img/1bit-alu.png"      # relative path to a picture in your repository
  inputs:               # a description of what the inputs do
    - CIN
    - INVA
    - A
    - ENA
    - B
    - ENB
    - F0
    - F1
  outputs:
    - segment a         # a description of what the outputs do
    - segment b
    - segment c
    - segment d
    - segment e
    - segment f
    - segment g
    - COUT

